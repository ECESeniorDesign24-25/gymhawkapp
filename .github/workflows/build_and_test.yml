name: Build and Test

on: pull_request

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_test:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate with GCP
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.IDENTITY_POOL_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      - name: Build
        run: |
          npm install
          npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        working-directory: functions
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write Firebase credentials to file
        working-directory: functions
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS_JSON }}' > firebase-credentials.json
        shell: bash

      - name: Run Tests
        working-directory: functions
        run: pytest
        env:
          GOOGLE_APPLICATION_CREDENTIALS: firebase-credentials.json
          ARDUINO_CLIENT_ID: ${{ secrets.ARDUINO_CLIENT_ID }}
          ARDUINO_CLIENT_SECRET: ${{ secrets.ARDUINO_CLIENT_SECRET }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_INSTANCE_NAME: ${{ secrets.DB_INSTANCE_NAME }}
          MODEL_BUCKET: ${{ secrets.MODEL_BUCKET }}
          MODEL_FILENAME: ${{ secrets.MODEL_FILENAME }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
