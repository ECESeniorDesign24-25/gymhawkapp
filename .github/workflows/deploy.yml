name: Deploy to Firebase

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Node.js dependencies
        run: npm install

      - name: Setup Python and install Functions dependencies
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install Python dependencies for Firebase Functions
        run: |
          pwd
          python -m venv functions/venv
          source functions/venv/bin/activate
          python -m pip install -r functions/requirements.txt
          python -m pip install firebase-admin

      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APPLICATION_DEFAULT_CREDENTIALS: ${{ secrets.APPLICATION_DEFAULT_CREDENTIALS }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          ARDUINO_CLIENT_ID: ${{ secrets.ARDUINO_CLIENT_ID }}   
          ARDUINO_CLIENT_SECRET: ${{ secrets.ARDUINO_CLIENT_SECRET }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_INSTANCE_NAME: ${{ secrets.DB_INSTANCE_NAME }}
        run: |
          # Create service account file
          echo "$APPLICATION_DEFAULT_CREDENTIALS" > serviceAccount.json
          
          # Set Google Application Credentials
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/serviceAccount.json
          
          # Create environment files
          echo "ARDUINO_CLIENT_ID=$ARDUINO_CLIENT_ID" > functions/.env.gymhawk-2ed7f
          echo "ARDUINO_CLIENT_SECRET=$ARDUINO_CLIENT_SECRET" >> functions/.env.gymhawk-2ed7f
          echo "DB_NAME=$DB_NAME" >> functions/.env.gymhawk-2ed7f
          echo "DB_USER=$DB_USER" >> functions/.env.gymhawk-2ed7f
          echo "DB_PASS=$DB_PASS" >> functions/.env.gymhawk-2ed7f
          echo "DB_INSTANCE_NAME=$DB_INSTANCE_NAME" >> functions/.env.gymhawk-2ed7f
          
          # Create .env.local file for Next.js build
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY" > .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID" >> .env.local
          
          # Initialize Firebase Admin SDK
          echo "Initializing Firebase Admin SDK..."
          source functions/venv/bin/activate
          python -c "import firebase_admin; from firebase_admin import credentials; cred = credentials.Certificate('serviceAccount.json'); firebase_admin.initialize_app(cred)"
          
          npm install -g firebase-tools@13.31.1
          firebase deploy --token $FIREBASE_TOKEN --non-interactive
